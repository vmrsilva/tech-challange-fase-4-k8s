apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
  annotations:
    description: "Deployment para SQL Server"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "YourStrong!Passw0rd"
        - name: MSSQL_PID
          value: "Express"
        ports:
        - containerPort: 1433
        volumeMounts:
        - name: sqlserver-data
          mountPath: /var/opt/mssql
      volumes:
      - name: sqlserver-data
        persistentVolumeClaim:
          claimName: sqlserver-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regionservice
  annotations:
    description: "Region Service"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: regionservice
  template:
    metadata:
      labels:
        app: regionservice
    spec:
      containers:
      - name: regionservice
        image: vmrsilva/techchallange-fase4-region
        envFrom:
          - configMapRef:
              name: regionconsumer-env-config
          - secretRef:
              name: region-secret
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "500m"
      initContainers:
      - name: wait-for-rabbitmq
        image: busybox
        command: ['sh', '-c', 'until nc -z rabbitmq-service 5672; do echo waiting for rabbitmq; sleep 2; done;']


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contactservice
  annotations:
    description: "Contact Service"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: contactservice
  template:
    metadata:
      labels:
        app: contactservice
    spec:
      containers:
      - name: contactservice
        image: vmrsilva/techchallange-fase4-contact:latest
        envFrom:
          - configMapRef:
              name: contactconsumer-env-config
          - secretRef:
              name: contact-secret
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: "100m"
          limits:
            cpu: "500m"
      initContainers:
      - name: wait-for-rabbitmq
        image: busybox
        command: ['sh', '-c', 'until nc -z rabbitmq-service 5672; do echo waiting for rabbitmq; sleep 2; done;']




---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: regionconsumer
  annotations:
    description: "Deployment for consumer region"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: regionconsumer
  template:
    metadata:
      labels:
        app: regionconsumer
    spec:
      containers:
      - name: regionconsumer
        image: vmrsilva/techchallange-fase4-region-consumer
        envFrom:
            - configMapRef:
                name: regionconsumer-env-config
            - secretRef:
                name: region-secret
        ports:
        - containerPort: 5050
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "100Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: contactconsumer
  annotations:
    description: "Deployment for consumer contacts"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: contactconsumer
  template:
    metadata:
      labels:
        app: contactconsumer
    spec:
      containers:
      - name: contactconsumer
        image: vmrsilva/techchallange-fase4-contact-consumer
        envFrom:
          - configMapRef:
              name: contactconsumer-env-config
          - secretRef:
              name: contact-secret
        ports:
        - containerPort: 6060
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "100Mi"
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command: ['sh', '-c', 'until nc -z rabbitmq-service 5672; do echo waiting for rabbitmq; sleep 2; done;']
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-app
  annotations:
    description: "Deployment for rabbitmq"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-app
  template:
    metadata:
      labels:
        app: rabbitmq-app
    spec:
      containers:
      - name: rabbitmq-app
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
        - containerPort: 15692
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-app
  annotations:
    description: "Deployment for prometheus"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-app
  template:
    metadata:
      labels:
        app: prometheus-app
    spec:
      containers:
      - name: prometheus-coll
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
            defaultMode: 420
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-app
  annotations:
    description: "Deployment for grafana"
spec:
  replicas: 1
  selector:
    matchLabels:
       app: grafana-app
  template:
    metadata:
     labels:
       app: grafana-app
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        # args:
        # - '--config=/grafana.ini'
        ports:
        - containerPort: 3000
        # securityContext:
        #   runAsUser: 0
        volumeMounts:
            - name: config-volume
              mountPath: /var/lib/grafana
      volumes:
        - name: config-volume
          persistentVolumeClaim:
            claimName: grafana-pvc
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  annotations:
    description: "Deployment for Redis"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
---